// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
/* The function returns 1 if
IP string is valid else return 0
You are required to complete this method */
class Solution {
    public:
        bool parseOctet(string octet){
            
            for(int i = 0; i<octet.size(); ++i){
                if( !(octet[i] >= '0' && octet[i] <='9') )
                    return false;
            }
            
            if(octet.size()>1 && octet[0] == '0')
                return false;
            
            int numOctet;
            stringstream ss(octet);
            ss >> numOctet;
            if(numOctet > 255)
                return false;

            return true;
        }
        
        int isValid(string s) {
            if( s[0] == '.' || s[s.size()-1] == '.')
                return 0;
            stringstream ss;
            ss << s;
            int count = 0;
            string str;
            while(getline(ss, str, '.')){
                ++count;
                
                if( str.size() > 3 || str.empty() )
                    return 0;
                if(!parseOctet(str))
                    return 0;
            }
            if(count != 4)
                return 0;
                
            return 1;
        }
};

// { Driver Code Starts.

int main() {
    // your code goes here
    int t;
    cin >> t;
    while (t--) {
        string s;
        cin >> s;
        Solution ob;
        cout << ob.isValid(s) << endl;
    }
    return 0;
}  // } Driver Code Ends
