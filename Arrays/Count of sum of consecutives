// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution {
  public:
    int getCount(int N) {
        // Arithmetic Progression Formula to be used
        // N = a + (a+1) + (a+2) + .. + (a+L) 
        // N = (L+1)*a + (L*(L+1))/2 
        // a = (N- L*(L+1)/2)/(L+1)
        // so basically run loop from 1 till (L*(L+1)/2) < N and find suitable 'a'
        // Suitable a -> if a comes out to be a natural number, count that solution
        
        int count = 0;
        for(int i = 1; i * (i + 1) < 2 * N; ++i){
            double temp = ((1.0 * N) - (i*(i+1)/2))/(i + 1);
            if( temp - (int)temp == 0.0 )
                ++count;
        }
        return count;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        
        cin>>N;

        Solution ob;
        cout << ob.getCount(N) << endl;
    }
    return 0;
}  // } Driver Code Ends
