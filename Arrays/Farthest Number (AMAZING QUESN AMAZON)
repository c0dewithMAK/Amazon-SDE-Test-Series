// { Driver Code Starts
//Initial Template for C++
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++
class Solution{   
  public:
    vector<int> farNumber(int N,vector<int> Arr){
        
        vector<int> res;
            
        int suffix_min[N];
        suffix_min[N-1] = Arr[N-1];
        
        // This suffix_min array contains minimum elements from [i...N-1] subarray
        for(int i = N-2; i>=0; --i){
            suffix_min[i] = min(suffix_min[i+1], Arr[i]);
        }
        
        // Now let's apply binary search on this suffix_min
        for(int i = 0; i<N; ++i){
            int low = i+1, high = N-1;
            int ans = -1;
            while(low <= high){
                int mid = (low+high)/2;
                
                if(suffix_min[mid] < Arr[i]){
                    ans = mid;
                    low = mid+1;
                }
                else{
                    high = mid-1;
                }
            }
            
            res.push_back(ans);
        }
        return res;
    }
};

// { Driver Code Starts.
signed main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int N;
        cin>>N;
        vector<int> Arr(N);
        for(int i=0;i<N;i++)
            cin>>Arr[i];
        Solution obj;
        vector<int> answer=obj.farNumber(N,Arr);
        for(auto i:answer)
            cout<<i<<" ";
        cout<<endl;
  }
}  // } Driver Code Ends
