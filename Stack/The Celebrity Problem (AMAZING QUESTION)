// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function template for C++

class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        int a = 0, b = n-1;
        int celeb = -1;
        while(a < b){
            // We use 2-pointer technique to traverse both ends of the number of people
            if(M[a][b] == 0){
                // a doesn't know b => b cannot be celebrity
                --b;
            }
            else if(M[a][b] == 1) {
                // a knows b => a cannot be celebrity
                ++a;                
            }
        }
        // Make a as celebrity
        celeb = a;
        int known = 0;
        for(int i = 0; i<n; ++i){
            if(i == celeb)
                continue;
            if(M[celeb][i] == 1)
                return -1;
            if(M[i][celeb] == 1)
                ++known;
        }
        
        // If n-1 people know a, then celeb = a indeed, return it
        if(known == n-1)
            return celeb;
        return -1;
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}
  // } Driver Code Ends
