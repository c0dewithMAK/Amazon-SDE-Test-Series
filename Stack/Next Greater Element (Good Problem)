// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution
{
    public:
    //Function to find the next greater element for each element of the array.
    vector<long long> nextLargerElement(vector<long long> arr, int n){
        vector<long long> res;
        if(n == 0)
            return res;
        
        if(n == 1){
            res.push_back(-1);
            return res;
        }
        
        stack<long long> s;
        // Start by pushing the first element into stack
        s.push(arr[0]);
        unordered_map<long long, long long> m;
        
        for(int i = 1; i<n; ++i){
            
            if(s.empty()){
                s.push(arr[i]);
                continue;
            }
                
            // keep popping while elements are smaller and stack is not empty
            while(!s.empty() && s.top() < arr[i]){
                m[s.top()] = arr[i];
                s.pop();
            }
            
            /* push next to stack so that we can find
               next smaller for it */
            s.push(arr[i]);
        }
        
        /* After iterating over the loop, the remaining
        elements in stack do not have the next smaller
        element, so assign -1 for them */ 
        while(!s.empty()){
            m[s.top()] = -1;
            s.pop();
        }
        
        for(int i = 0; i<n; ++i){
            res.push_back(m[arr[i]]);
        }
        return res;
    }
};

// { Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        
        int n;
        cin>>n;
        vector<long long> arr(n);
        for(int i=0;i<n;i++)
            cin>>arr[i];
        
        Solution obj;
        vector <long long> res = obj.nextLargerElement(arr, n);
        for (long long i : res) cout << i << " ";
        cout<<endl;
    }
	return 0;
}  // } Driver Code Ends
